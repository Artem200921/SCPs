{"version":3,"sources":["modules/storage.js","storageSystem.js","sigma.js","index.js"],"names":["load","exports","key","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","error","save","value","stringify","setItem","SCPObject","_createClass","id","name","description","_classCallCheck","StorageSystem","storage","object","push","index","findIndex","obj","splice","find","_toConsumableArray","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","BASE_URL","scpFunc","_x","_scpFunc","_callee","options","response","result","_t","_context","fetch","concat","json","log","_storage","require","_storageSystem","_sigma","sigmaDiv","document","querySelector","sigmadiven","sigmaForm","getElementById","input","inputUrl","listSW","listSF","listOW","sigmaTransit","testForm","testGallery","listSWTest","listSFTest","listOWTest","testInput","testInputUrl","addEventListener","classList","toggle","event","preventDefault","addScpTest","method","headers","setTimeout","forEach","item","getScpsTest","url","ssaps","nameS","trim","urlS","newScp","body","alert","testItem","createElement","add","dataset","deleteButtonTest","test","appendChild","textContent","href","target","init","_init","skps","getScps","addScp","_addScp","Date","now","toString","Math","random","slice","array","scp","includes","_getScps","listItem","link","deleteButton","stopPropagation","itemId","remove","idx","contains","children"],"mappings":";AAoBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,QAAA,UAAA,EAlBD,IAAMA,EAAIC,QAAAD,KAAG,SAACE,GACZ,IACE,IAAMC,EAAkBC,aAAaC,QAAQH,GAE7C,OAA2B,OAApBC,OAA2BG,EAAYC,KAAKC,MAAML,GACzD,MAAOM,GACPC,QAAQC,MAAM,oBAAqBF,KAIjCG,EAAIX,QAAAW,KAAG,SAACV,EAAKW,GACjB,IACE,IAAMV,EAAkBI,KAAKO,UAAUD,GAEvCT,aAAaW,QAAQb,EAAKC,GAC1B,MAAOM,GACPC,QAAQC,MAAM,oBAAqBF;;ACSpC,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,WAAA,MAAA,EAAA,cAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,eAAA,EAAA,YAAA,CAAA,UAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,UAAA,MAAA,UAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,aAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,GAAA,UAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,gDAAA,OAAA,WAAA,EAAA,OAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,QAAA,eAAA,EA3BUO,IAAAA,EAASf,QAAAe,UAAAC,EACpB,SAAAD,EAAYE,EAAIC,EAAMC,GAAaC,EAAAL,KAAAA,GACjC,KAAKE,GAAKA,EACV,KAAKC,KAAOA,EACZ,KAAKC,YAAcA,IAGVE,EAAarB,QAAAqB,cAAA,WAGvB,OAAAL,EAFD,SAAAK,IAAcD,EAAAC,KAAAA,GACZ,KAAKC,QAAU,IAChB,CAAA,CAAArB,IAAA,MAAAW,MACD,SAAIW,GACF,KAAKD,QAAQE,KAAKD,KACnB,CAAAtB,IAAA,SAAAW,MACD,SAAOK,GACL,IAAMQ,EAAQ,KAAKH,QAAQI,UAAU,SAACC,GAAG,OAAKA,EAAIV,KAAOA,IACzD,OAAe,IAAXQ,IACF,KAAKH,QAAQM,OAAOH,EAAO,IACpB,KAGV,CAAAxB,IAAA,MAAAW,MACD,SAAIK,GACF,OAAO,KAAKK,QAAQO,KAAK,SAACF,GAAG,OAAKA,EAAIV,KAAOA,MAC9C,CAAAhB,IAAA,OAAAW,MACD,WACE,OAAAkB,EAAW,KAAKR,aAnBM;;ACGzB,aATD,SAAA,IAAAS,IAAAA,EAAAC,EAAAC,EAAAC,mBAAAA,OAAAA,OAAAC,GAAAA,EAAAF,EAAAG,UAAAC,aAAAA,EAAAJ,EAAAK,aAAAC,gBAAAA,SAAAA,EAAAN,EAAAE,EAAAE,EAAAE,GAAAC,IAAAA,EAAAL,GAAAA,EAAAM,qBAAAC,EAAAP,EAAAO,EAAAC,EAAAC,OAAAC,OAAAL,EAAAC,WAAAK,OAAAA,EAAAH,EAAAV,UAAAA,SAAAA,EAAAE,EAAAE,GAAAE,IAAAA,EAAAC,EAAAG,EAAAI,EAAAC,EAAAA,EAAAX,GAAAY,GAAAA,GAAAC,EAAAA,EAAAF,CAAAA,EAAAb,EAAAA,EAAAgB,EAAAA,EAAApB,EAAAqB,EAAAC,EAAAN,EAAAM,EAAAC,KAAAvB,EAAAsB,GAAAA,EAAAA,SAAArB,EAAAC,GAAAM,OAAAA,EAAAP,EAAAQ,EAAAG,EAAAA,EAAAZ,EAAAmB,EAAAf,EAAAF,EAAAmB,IAAAC,SAAAA,EAAApB,EAAAE,GAAAK,IAAAA,EAAAP,EAAAU,EAAAR,EAAAH,EAAAiB,GAAAA,GAAAF,IAAAV,GAAAL,EAAAgB,EAAAO,OAAAvB,IAAAK,CAAAA,IAAAA,EAAAE,EAAAS,EAAAhB,GAAAqB,EAAAH,EAAAF,EAAAQ,EAAAjB,EAAAN,GAAAA,EAAAI,GAAAA,EAAAmB,IAAArB,KAAAQ,EAAAJ,GAAAC,EAAAD,EAAAC,IAAAA,GAAAA,EAAAD,EAAAA,IAAAA,EAAAA,GAAAA,EAAAR,GAAAA,GAAAQ,EAAAc,IAAAA,KAAAhB,EAAAJ,EAAAoB,GAAAA,EAAAd,EAAAC,KAAAA,EAAAU,EAAAA,EAAAC,EAAAhB,EAAAe,EAAAf,EAAAI,EAAAc,IAAAA,EAAAG,IAAAnB,EAAAJ,EAAAM,GAAAA,EAAAJ,GAAAA,GAAAA,EAAAqB,KAAAjB,EAAAN,GAAAA,EAAAM,EAAAJ,GAAAA,EAAAe,EAAAf,EAAAqB,EAAAhB,EAAAH,IAAAA,GAAAA,GAAAJ,EAAAmB,EAAAA,OAAAA,EAAAH,MAAAA,GAAAd,EAAAA,EAAAE,OAAAA,SAAAA,EAAAW,EAAAQ,GAAAT,GAAAA,EAAAU,EAAAA,MAAAA,UAAAR,gCAAAA,IAAAA,GAAAD,IAAAA,GAAAK,EAAAL,EAAAQ,GAAAhB,EAAAQ,EAAAL,EAAAa,GAAAxB,EAAAQ,EAAAT,EAAAA,EAAAY,KAAAM,GAAAV,CAAAA,IAAAC,EAAAA,EAAAA,GAAAA,EAAAU,IAAAA,EAAAf,GAAAkB,GAAAA,EAAAb,EAAAG,IAAAO,EAAAf,EAAAQ,EAAAO,EAAAC,EAAAR,GAAAI,IAAAA,GAAAA,EAAAR,EAAAA,EAAAC,CAAAA,GAAAA,IAAAH,EAAAL,QAAAA,EAAAO,EAAAF,GAAAL,CAAAA,KAAAA,EAAAA,EAAA0B,KAAAnB,EAAAI,IAAAc,MAAAA,UAAAzB,oCAAAA,IAAAA,EAAA2B,KAAA3B,OAAAA,EAAAW,EAAAX,EAAApB,MAAA4B,EAAAA,IAAAA,EAAAA,QAAAA,IAAAA,IAAAR,EAAAO,EAAAqB,SAAA5B,EAAA0B,KAAAnB,GAAAC,EAAAG,IAAAA,EAAAc,UAAApB,oCAAAA,EAAAG,YAAAA,EAAAD,GAAAA,EAAAR,OAAAC,IAAAA,GAAAiB,EAAAC,EAAAf,EAAAQ,GAAAA,EAAAV,EAAAyB,KAAAvB,EAAAe,MAAAE,EAAApB,MAAAA,MAAAA,GAAAO,EAAAR,EAAAS,EAAAG,EAAAA,EAAAX,EAAAe,QAAAA,EAAAnC,GAAAA,MAAAA,CAAAA,MAAAoB,EAAA2B,KAAAV,IAAAhB,CAAAA,EAAAI,EAAAE,IAAAI,GAAAA,EAAAS,IAAAA,EAAAV,GAAAA,SAAAA,KAAAmB,SAAAA,KAAAC,SAAAA,KAAA9B,EAAAY,OAAAmB,eAAAvB,IAAAA,EAAAL,GAAAA,GAAAH,EAAAA,EAAAG,GAAAA,QAAAW,EAAAd,EAAAG,GAAAA,EAAAH,WAAAA,OAAAA,OAAAA,GAAAW,EAAAmB,EAAArB,UAAAC,EAAAD,UAAAG,OAAAC,OAAAL,GAAAO,SAAAA,EAAAhB,GAAAa,OAAAA,OAAAoB,eAAApB,OAAAoB,eAAAjC,EAAA+B,IAAA/B,EAAAkC,UAAAH,EAAAhB,EAAAf,EAAAM,EAAAN,sBAAAA,EAAAU,UAAAG,OAAAC,OAAAF,GAAAZ,EAAA8B,OAAAA,EAAApB,UAAAqB,EAAAhB,EAAAH,EAAAmB,cAAAA,GAAAhB,EAAAgB,EAAAD,cAAAA,GAAAA,EAAAK,YAAApB,oBAAAA,EAAAgB,EAAAzB,EAAAS,qBAAAA,EAAAH,GAAAG,EAAAH,EAAAN,EAAAS,aAAAA,EAAAH,EAAAR,EAAAW,WAAAA,OAAAA,OAAAA,EAAAH,EAAAwB,WAAAA,WAAAA,MAAAA,wBAAAA,EAAAA,WAAAC,MAAAA,CAAAA,EAAA7B,EAAA8B,EAAAtB,OAAA,SAAAD,EAAAf,EAAAE,EAAAE,EAAAH,GAAAO,IAAAA,EAAAK,OAAA0B,eAAA/B,IAAAA,EAAAR,GAAAA,GAAAA,IAAAA,MAAAA,GAAAQ,EAAAO,GAAAA,EAAAyB,SAAAxC,EAAAE,EAAAE,EAAAH,GAAAC,GAAAA,EAAAM,EAAAA,EAAAR,EAAAE,EAAArB,CAAAA,MAAAuB,EAAAqC,YAAAxC,EAAAyC,cAAAzC,EAAA0C,UAAA1C,IAAAD,EAAAE,GAAAE,MAAAE,CAAAA,SAAAA,EAAAJ,EAAAE,GAAAW,EAAAf,EAAAE,EAAAF,SAAAA,GAAA4C,OAAAA,KAAAA,QAAA1C,EAAAE,EAAAJ,KAAAM,EAAAA,OAAAA,GAAAA,EAAAA,QAAAA,GAAAA,EAAAS,SAAAA,MAAAf,EAAAE,EAAAE,EAAAH,GAAA,SAAA4C,EAAAzC,EAAAH,EAAAD,EAAAE,EAAAI,EAAAe,EAAAZ,GAAAD,IAAAA,IAAAA,EAAAJ,EAAAiB,GAAAZ,GAAAG,EAAAJ,EAAA3B,MAAAuB,MAAAA,GAAAJ,YAAAA,EAAAI,GAAAI,EAAAoB,KAAA3B,EAAAW,GAAAkC,QAAAC,QAAAnC,GAAAoC,KAAA9C,EAAAI,GAAA,SAAA2C,EAAA7C,GAAAH,OAAAA,WAAAA,IAAAA,EAAAD,KAAAA,EAAAkD,UAAAJ,OAAAA,IAAAA,QAAA5C,SAAAA,EAAAI,GAAAe,IAAAA,EAAAjB,EAAA+C,MAAAlD,EAAAD,GAAAoD,SAAAA,EAAAhD,GAAAyC,EAAAxB,EAAAnB,EAAAI,EAAA8C,EAAAC,EAAAjD,OAAAA,GAAAiD,SAAAA,EAAAjD,GAAAyC,EAAAxB,EAAAnB,EAAAI,EAAA8C,EAAAC,EAAAjD,QAAAA,GAAAgD,OAAA,MASC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAVD,IAAME,EAAW,6BAA6B,SAExBC,EAAOC,GAAA,OAAAC,EAAAN,MAAAD,KAAAA,WAkC7B,SAAAO,IA1BC,OA0BDA,EAAAR,EAAAb,IAAAE,EAlCO,SAAAoB,EAAuBC,GAAO,IAAAC,EAAAC,EAAAC,EAAA,OAAA1B,IAAAC,EAAA0B,SAAAA,GAAA,OAAAA,OAAAA,EAAA3D,GAAA,KAAA,EAAA,OAAA2D,EAAA9C,EAAA,EAAA8C,EAAA3D,EAAA,EAEV4D,MAAKC,GAAAA,OAAIX,GAAYK,GAAQ,KAAA,EAAtC,OAARC,EAAQG,EAAA3C,EAAA2C,EAAA3D,EAAA,EACOwD,EAASM,OAAM,KAAA,EAAxB,OAANL,EAAME,EAAA3C,EAAA2C,EAAA1C,EACLwC,EAAAA,GAAM,KAAA,EAAAE,EAAA9C,EAAA,EAAA6C,EAAAC,EAAA3C,EAEb1C,QAAQyF,IAAGL,GAAQ,KAAA,EAAA,OAAAC,EAAA1C,EAAA,KAAAqC,EAAA,KAAA,CAAA,CAAA,EAAA,SAEtBP,MAAAD,KAAAA;;AC2NO,aArOR,IAAAkB,EAAAC,QAAA,wBAGAC,EAAAD,QAAA,sBACAE,EAAAF,QAAA,cAAqC,SAAAjC,IAHrCpC,IAAAA,EAAAC,EAAAC,EAAAC,mBAAAA,OAAAA,OAAAC,GAAAA,EAAAF,EAAAG,UAAAC,aAAAA,EAAAJ,EAAAK,aAAAC,gBAAAA,SAAAA,EAAAN,EAAAE,EAAAE,EAAAE,GAAAC,IAAAA,EAAAL,GAAAA,EAAAM,qBAAAC,EAAAP,EAAAO,EAAAC,EAAAC,OAAAC,OAAAL,EAAAC,WAAAK,OAAAA,EAAAH,EAAAV,UAAAA,SAAAA,EAAAE,EAAAE,GAAAE,IAAAA,EAAAC,EAAAG,EAAAI,EAAAC,EAAAA,EAAAX,GAAAY,GAAAA,GAAAC,EAAAA,EAAAF,CAAAA,EAAAb,EAAAA,EAAAgB,EAAAA,EAAApB,EAAAqB,EAAAC,EAAAN,EAAAM,EAAAC,KAAAvB,EAAAsB,GAAAA,EAAAA,SAAArB,EAAAC,GAAAM,OAAAA,EAAAP,EAAAQ,EAAAG,EAAAA,EAAAZ,EAAAmB,EAAAf,EAAAF,EAAAmB,IAAAC,SAAAA,EAAApB,EAAAE,GAAAK,IAAAA,EAAAP,EAAAU,EAAAR,EAAAH,EAAAiB,GAAAA,GAAAF,IAAAV,GAAAL,EAAAgB,EAAAO,OAAAvB,IAAAK,CAAAA,IAAAA,EAAAE,EAAAS,EAAAhB,GAAAqB,EAAAH,EAAAF,EAAAQ,EAAAjB,EAAAN,GAAAA,EAAAI,GAAAA,EAAAmB,IAAArB,KAAAQ,EAAAJ,GAAAC,EAAAD,EAAAC,IAAAA,GAAAA,EAAAD,EAAAA,IAAAA,EAAAA,GAAAA,EAAAR,GAAAA,GAAAQ,EAAAc,IAAAA,KAAAhB,EAAAJ,EAAAoB,GAAAA,EAAAd,EAAAC,KAAAA,EAAAU,EAAAA,EAAAC,EAAAhB,EAAAe,EAAAf,EAAAI,EAAAc,IAAAA,EAAAG,IAAAnB,EAAAJ,EAAAM,GAAAA,EAAAJ,GAAAA,GAAAA,EAAAqB,KAAAjB,EAAAN,GAAAA,EAAAM,EAAAJ,GAAAA,EAAAe,EAAAf,EAAAqB,EAAAhB,EAAAH,IAAAA,GAAAA,GAAAJ,EAAAmB,EAAAA,OAAAA,EAAAH,MAAAA,GAAAd,EAAAA,EAAAE,OAAAA,SAAAA,EAAAW,EAAAQ,GAAAT,GAAAA,EAAAU,EAAAA,MAAAA,UAAAR,gCAAAA,IAAAA,GAAAD,IAAAA,GAAAK,EAAAL,EAAAQ,GAAAhB,EAAAQ,EAAAL,EAAAa,GAAAxB,EAAAQ,EAAAT,EAAAA,EAAAY,KAAAM,GAAAV,CAAAA,IAAAC,EAAAA,EAAAA,GAAAA,EAAAU,IAAAA,EAAAf,GAAAkB,GAAAA,EAAAb,EAAAG,IAAAO,EAAAf,EAAAQ,EAAAO,EAAAC,EAAAR,GAAAI,IAAAA,GAAAA,EAAAR,EAAAA,EAAAC,CAAAA,GAAAA,IAAAH,EAAAL,QAAAA,EAAAO,EAAAF,GAAAL,CAAAA,KAAAA,EAAAA,EAAA0B,KAAAnB,EAAAI,IAAAc,MAAAA,UAAAzB,oCAAAA,IAAAA,EAAA2B,KAAA3B,OAAAA,EAAAW,EAAAX,EAAApB,MAAA4B,EAAAA,IAAAA,EAAAA,QAAAA,IAAAA,IAAAR,EAAAO,EAAAqB,SAAA5B,EAAA0B,KAAAnB,GAAAC,EAAAG,IAAAA,EAAAc,UAAApB,oCAAAA,EAAAG,YAAAA,EAAAD,GAAAA,EAAAR,OAAAC,IAAAA,GAAAiB,EAAAC,EAAAf,EAAAQ,GAAAA,EAAAV,EAAAyB,KAAAvB,EAAAe,MAAAE,EAAApB,MAAAA,MAAAA,GAAAO,EAAAR,EAAAS,EAAAG,EAAAA,EAAAX,EAAAe,QAAAA,EAAAnC,GAAAA,MAAAA,CAAAA,MAAAoB,EAAA2B,KAAAV,IAAAhB,CAAAA,EAAAI,EAAAE,IAAAI,GAAAA,EAAAS,IAAAA,EAAAV,GAAAA,SAAAA,KAAAmB,SAAAA,KAAAC,SAAAA,KAAA9B,EAAAY,OAAAmB,eAAAvB,IAAAA,EAAAL,GAAAA,GAAAH,EAAAA,EAAAG,GAAAA,QAAAW,EAAAd,EAAAG,GAAAA,EAAAH,WAAAA,OAAAA,OAAAA,GAAAW,EAAAmB,EAAArB,UAAAC,EAAAD,UAAAG,OAAAC,OAAAL,GAAAO,SAAAA,EAAAhB,GAAAa,OAAAA,OAAAoB,eAAApB,OAAAoB,eAAAjC,EAAA+B,IAAA/B,EAAAkC,UAAAH,EAAAhB,EAAAf,EAAAM,EAAAN,sBAAAA,EAAAU,UAAAG,OAAAC,OAAAF,GAAAZ,EAAA8B,OAAAA,EAAApB,UAAAqB,EAAAhB,EAAAH,EAAAmB,cAAAA,GAAAhB,EAAAgB,EAAAD,cAAAA,GAAAA,EAAAK,YAAApB,oBAAAA,EAAAgB,EAAAzB,EAAAS,qBAAAA,EAAAH,GAAAG,EAAAH,EAAAN,EAAAS,aAAAA,EAAAH,EAAAR,EAAAW,WAAAA,OAAAA,OAAAA,EAAAH,EAAAwB,WAAAA,WAAAA,MAAAA,wBAAAA,EAAAA,WAAAC,MAAAA,CAAAA,EAAA7B,EAAA8B,EAAAtB,OAAA,SAAAD,EAAAf,EAAAE,EAAAE,EAAAH,GAAAO,IAAAA,EAAAK,OAAA0B,eAAA/B,IAAAA,EAAAR,GAAAA,GAAAA,IAAAA,MAAAA,GAAAQ,EAAAO,GAAAA,EAAAyB,SAAAxC,EAAAE,EAAAE,EAAAH,GAAAC,GAAAA,EAAAM,EAAAA,EAAAR,EAAAE,EAAArB,CAAAA,MAAAuB,EAAAqC,YAAAxC,EAAAyC,cAAAzC,EAAA0C,UAAA1C,IAAAD,EAAAE,GAAAE,MAAAE,CAAAA,SAAAA,EAAAJ,EAAAE,GAAAW,EAAAf,EAAAE,EAAAF,SAAAA,GAAA4C,OAAAA,KAAAA,QAAA1C,EAAAE,EAAAJ,KAAAM,EAAAA,OAAAA,GAAAA,EAAAA,QAAAA,GAAAA,EAAAS,SAAAA,MAAAf,EAAAE,EAAAE,EAAAH,GAAA,SAAA4C,EAAAzC,EAAAH,EAAAD,EAAAE,EAAAI,EAAAe,EAAAZ,GAAAD,IAAAA,IAAAA,EAAAJ,EAAAiB,GAAAZ,GAAAG,EAAAJ,EAAA3B,MAAAuB,MAAAA,GAAAJ,YAAAA,EAAAI,GAAAI,EAAAoB,KAAA3B,EAAAW,GAAAkC,QAAAC,QAAAnC,GAAAoC,KAAA9C,EAAAI,GAAA,SAAA2C,EAAA7C,GAAAH,OAAAA,WAAAA,IAAAA,EAAAD,KAAAA,EAAAkD,UAAAJ,OAAAA,IAAAA,QAAA5C,SAAAA,EAAAI,GAAAe,IAAAA,EAAAjB,EAAA+C,MAAAlD,EAAAD,GAAAoD,SAAAA,EAAAhD,GAAAyC,EAAAxB,EAAAnB,EAAAI,EAAA8C,EAAAC,EAAAjD,OAAAA,GAAAiD,SAAAA,EAAAjD,GAAAyC,EAAAxB,EAAAnB,EAAAI,EAAA8C,EAAAC,EAAAjD,QAAAA,GAAAgD,OAAA,MAKA,IAAMoB,EAAWC,SAASC,cAAc,YAClCC,EAAaF,SAASC,cAAc,aACpCE,EAAYH,SAASI,eAAe,eACpCC,EAAQL,SAASI,eAAe,gBAChCE,EAAWN,SAASI,eAAe,qBACnCG,EAASP,SAASC,cAAc,SAChCO,EAASR,SAASC,cAAc,WAChCQ,EAAST,SAASC,cAAc,WAEhCS,EAAeV,SAASC,cAAc,qBACtCU,EAAWX,SAASC,cAAc,cAClCW,EAAcZ,SAASC,cAAc,iBACrCY,EAAab,SAASC,cAAc,cACpCa,EAAad,SAASC,cAAc,gBACpCc,EAAaf,SAASC,cAAc,gBACpCe,EAAYhB,SAASC,cAAc,gBACnCgB,EAAejB,SAASC,cAAc,qBAE5CS,EAAaQ,iBAAiB,QAAS,WACrCP,EAASQ,UAAUC,OAAO,UAC1BlB,EAAWiB,UAAUC,OAAO,cAG9BT,EAASO,iBAAiB,SAAU,SAACG,GACnCA,EAAMC,iBACNC,EAAWP,EAAWC,KAExB,IAAM/B,EAAU,CACdsC,OAAQ,MACRC,QAAS,CACP,eAAgB,qBAGpBC,WAAW,YACT,EAAA5C,EAAO,SAACI,GAASX,KAAK,SAACa,GACrBA,EAAOuC,QAAQ,SAACC,GACdC,EAAYD,EAAKlH,KAAMkH,EAAKE,IAAKF,EAAKnH,SAGzC,KAEH,IAAMhB,EAAM,OACRsI,GAAQ,EAAAxI,EAAI,MAACE,GAEjB,SAAS8H,EAAWlB,EAAOC,GACzB,IAAM0B,EAAQ3B,EAAMjG,MAAM6H,OACpBC,EAAO5B,EAASlG,MAAM6H,OAC5B,GAAID,GAASE,EAAM,CAEjB,IAAMC,EAAS,CACbzH,KAAMsH,EACNF,IAAKI,GAGDhD,EAAU,CACdsC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBW,KAAMtI,KAAKO,UAAU8H,KAEvB,EAAArD,EAAO,SAACI,GAERmB,EAAMjG,MAAQ,GACdkG,EAASlG,MAAQ,GACjByH,EAAYM,EAAOzH,KAAMyH,EAAOL,UAEhCO,MAAM,uCAIV,SAASR,EAAYnH,EAAMoH,EAAKrH,GAC9B,IAAM6H,EAAWtC,SAASuC,cAAc,MACxCD,EAASnB,UAAUqB,IAAI,aACnB/H,IAAI6H,EAASG,QAAQhI,GAAKA,GAC9B,IAAMiI,EAAmB1C,SAASuC,cAAc,UAChDG,EAAiBvB,UAAUqB,IAAI,kBAC/B,IAAMG,EAAO3C,SAASuC,cAAc,KAUpCD,EAASnB,UAAUqB,IAAI,eACvBzB,EAAW6B,YAAYN,GACvBI,EAAiBG,YAAc,UAE/BF,EAAKG,KAAOhB,EACZa,EAAKE,YAAcnI,EACnBiI,EAAKI,OAAS,SACdJ,EAAKxB,UAAUqB,IAAI,aACnBF,EAASM,YAAYD,GACrBL,EAASM,YAAYF,GACtB,SAEcM,IAAI,OAAAC,EAAAvE,MAAAD,KAAAA,WAAA,SAAAwE,IA0HlB,OA1HkBA,EAAAzE,EAAAb,IAAAE,EAAnB,SAAAoB,IAAA,IAAAE,EAAA+D,EAAApI,EAoBWqI,EAuEAC,EAAM,OAAAzF,IAAAC,EAAA0B,SAAAA,GAAA,OAAAA,OAAAA,EAAA3D,GAAA,KAAA,EA1Bd,GA0BQyH,EAAMC,SAAChD,EAAOC,GACrB,IAAM0B,EAAQ3B,EAAMjG,MAAM6H,OACpBC,EAAO5B,EAASlG,MAAM6H,OAC5B,GAAID,GAASE,EAAM,CAEjB,IACMC,EAAS,CACbzH,KAAMsH,EACNF,IAAKI,EACLzH,GAJS6I,KAAKC,MAAMC,WAAaC,KAAKC,SAASF,SAAS,IAAIG,MAAM,EAAG,IAOvEtD,EAAMjG,MAAQ,GACdkG,EAASlG,MAAQ,GACjB,IAAIwJ,EAAQ,GACZ7B,EAAMJ,QAAQ,SAACkC,GACbD,EAAM5I,KAAK6I,EAAInJ,QAEbkJ,EAAME,SAAS9B,GACjBK,MAAM,4BAENvH,EAAQ0H,IAAI,IAAIjI,EAAS,UAAC4H,EAAO1H,GAAI0H,EAAOzH,KAAMyH,EAAOL,MACzDC,EAAM/G,KAAKmH,IACX,EAAAhI,EAAI,MAACV,EAAKsI,GACV9H,QAAQyF,IAAIqC,GACZoB,EAAQhB,EAAOzH,KAAMyH,EAAOL,IAAKK,EAAO1H,UAG1C4H,MAAM,wCAnGDc,EAAOY,SAACrJ,EAAMoH,EAAKrH,GAC1B,IAAMuJ,EAAWhE,SAASuC,cAAc,MACxCyB,EAAS7C,UAAUqB,IAAI,aACnB/H,IAAIuJ,EAASvB,QAAQhI,GAAKA,GAC9B,IAAMwJ,EAAOjE,SAASuC,cAAc,KAC9B2B,EAAelE,SAASuC,cAAc,UAC5C2B,EAAa/C,UAAUqB,IAAI,kBAKvB9H,EAAKoJ,SAAS,QAChBvD,EAAOqC,YAAYoB,GACnBE,EAAarB,YAAc,cAND,UAAUF,KAOjBjI,IACnBwJ,EAAarB,YAAc,UAC3BrC,EAAOoC,YAAYoB,KAEnBA,EAAS7C,UAAUqB,IAAI,eACvB/B,EAAOmC,YAAYoB,GACnBE,EAAarB,YAAc,UAE7BoB,EAAKnB,KAAOhB,EACZmC,EAAKpB,YAAcnI,EACnBuJ,EAAKlB,OAAS,SACdkB,EAAK9C,UAAUqB,IAAI,aACnBwB,EAASpB,YAAYqB,GACrBD,EAASpB,YAAYsB,GAGrBA,EAAahD,iBAAiB,QAAS,SAAC3F,GACtCA,EAAE4I,kBACF,IAAMC,EAASJ,EAASvB,QAAQhI,GAEhCK,EAAQuJ,OAAOD,GAEf,IAAME,EAAMvC,EAAM7G,UAAU,SAACC,GAAG,OAAKA,EAAIV,KAAO2J,KACnC,IAATE,IACFvC,EAAM3G,OAAOkJ,EAAK,IAClB,EAAAnK,EAAI,MAACV,EAAKsI,IAGZiC,EAASK,YA7DRtC,EAAK,CAAAzC,EAAA3D,EAAA,EAAA,MAAA,OAAA2D,EAAA3D,EAAA,EAEe4D,MAAM,mBAAkB,KAAA,EAAjC,OAARJ,EAAQG,EAAA3C,EAAA2C,EAAA3D,EAAA,EACKwD,EAASM,OAAM,KAAA,EAA5ByD,EAAI5D,EAAA3C,EACVoF,EAAQmB,EAAKA,MACb,EAAA/I,EAAI,MAACV,EAAKsI,GAAO,KAAA,EAGnB9H,QAAQyF,IAAIqC,GAENjH,EAAU,IAAID,EAAa,cACjCkH,EAAMJ,QAAQ,SAACkC,GACb,IAAMpJ,EACJoJ,EAAIpJ,IAAM6I,KAAKC,MAAMC,WAAaC,KAAKC,SAASF,SAAS,IAAIG,MAAM,EAAG,GACxE7I,EAAQ0H,IAAI,IAAIjI,EAAS,UAACE,EAAIoJ,EAAInJ,KAAMmJ,EAAI/B,MAC5CqB,EAAQU,EAAInJ,KAAMmJ,EAAI/B,IAAKrH,KAmD7BsF,EAASmB,iBAAiB,QAAS,SAAC3F,GAClC,GAAIA,EAAEwH,OAAO5B,UAAUoD,SAAS,iBACjBhJ,EAAEwH,OAAOyB,SAAS,GAIpB5C,KAAK3B,cAAc,oBAIlCE,EAAUe,iBAAiB,SAAU,SAACG,GACpCA,EAAMC,iBACNrH,QAAQyF,IAAIqC,GACZL,WAAW,WACLrB,GAASC,GACX8C,EAAO/C,EAAOC,GACdD,EAAMjG,MAAQ,GACdkG,EAASlG,MAAQ,IAEjBiI,MAAM,wCAEP,OACF,KAAA,EAAA,OAAA/C,EAAA1C,EAAA,KAAAqC,OAiCJP,MAAAD,KAAAA,WAEDuE","file":"SCPs.b61d30f1.js","sourceRoot":"..","sourcesContent":["\r\n\r\nconst load = (key) => {\r\n  try {\r\n    const serializedState = localStorage.getItem(key);\r\n\r\n    return serializedState === null ? undefined : JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.error(\"Get state error: \", err);\r\n  }\r\n};\r\n\r\nconst save = (key, value) => {\r\n  try {\r\n    const serializedState = JSON.stringify(value);\r\n\r\n    localStorage.setItem(key, serializedState);\r\n  } catch (err) {\r\n    console.error(\"Set state error: \", err);\r\n  }\r\n};\r\n\r\nexport { save, load };\r\n","export class SCPObject {\r\n  constructor(id, name, description) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.description = description;\r\n  }\r\n}\r\nexport class StorageSystem {\r\n  constructor() {\r\n    this.storage = [];\r\n  }\r\n  add(object) {\r\n    this.storage.push(object);\r\n  }\r\n  remove(id) {\r\n    const index = this.storage.findIndex((obj) => obj.id === id);\r\n    if (index !== -1) {\r\n      this.storage.splice(index, 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  get(id) {\r\n    return this.storage.find((obj) => obj.id === id);\r\n  }\r\n  list() {\r\n    return [...this.storage];\r\n  }\r\n}\r\n","const BASE_URL = \"http://localhost:3000/scps\";\r\n\r\nexport async function scpFunc(options) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}`, options);\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n// const newStudent = {\r\n//   name: \"Artem\",\r\n// };\r\n\r\n// const options = {\r\n//   method: \"POST\",\r\n//   headers: {\r\n//     \"Content-Type\": \"application/json\",\r\n//   },\r\n//   body: JSON.stringify(newStudent),\r\n// };\r\n\r\n// async function addNewStudent() {\r\n//   try {\r\n//     const response = await fetch(\"items/books.json\", options);\r\n//     const result = await response.json();\r\n//     console.log(result);\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// }\r\n\r\n// document.querySelector(\"button\").addEventListener(\"click\", () => {\r\n//   addNewStudent();\r\n// });\r\n","import { save, load } from \"./modules/storage.js\";\r\n// імпортуємо franc для визначення мови\r\n// import skps from \"./nvsdjvdj.json\"; // видалити цей рядок\r\nimport { StorageSystem, SCPObject } from \"./storageSystem.js\"; // змінено з .ts на .js\r\nimport { scpFunc } from \"./sigma.js\";\r\n\r\nconst sigmaDiv = document.querySelector(\".gallery\");\r\nconst sigmadiven = document.querySelector(\".sigmadiv\");\r\nconst sigmaForm = document.getElementById(\"sigma__form\");\r\nconst input = document.getElementById(\"sigma__input\");\r\nconst inputUrl = document.getElementById(\"sigma__input--url\");\r\nconst listSW = document.querySelector(\"#scpW\");\r\nconst listSF = document.querySelector(\"#otherF\");\r\nconst listOW = document.querySelector(\"#otherW\");\r\n\r\nconst sigmaTransit = document.querySelector(\".linkForNightmare\");\r\nconst testForm = document.querySelector(\".formSigma\");\r\nconst testGallery = document.querySelector(\".test_gallery\");\r\nconst listSWTest = document.querySelector(\"#scpW_test\");\r\nconst listSFTest = document.querySelector(\"#otherF_test\");\r\nconst listOWTest = document.querySelector(\"#otherW_test\");\r\nconst testInput = document.querySelector(\"#test__input\");\r\nconst testInputUrl = document.querySelector(\"#test__input--url\");\r\n\r\nsigmaTransit.addEventListener(\"click\", () => {\r\n  testForm.classList.toggle(\"active\");\r\n  sigmadiven.classList.toggle(\"inactive\");\r\n});\r\n\r\ntestForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  addScpTest(testInput, testInputUrl);\r\n});\r\nconst options = {\r\n  method: \"GET\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\nsetTimeout(() => {\r\n  scpFunc(options).then((result) => {\r\n    result.forEach((item) => {\r\n      getScpsTest(item.name, item.url, item.id);\r\n    });\r\n  });\r\n}, 500);\r\n\r\nconst key = \"scps\";\r\nlet ssaps = load(key);\r\n\r\nfunction addScpTest(input, inputUrl) {\r\n  const nameS = input.value.trim();\r\n  const urlS = inputUrl.value.trim();\r\n  if (nameS && urlS) {\r\n    // Генеруємо простий id\r\n    const newScp = {\r\n      name: nameS,\r\n      url: urlS,\r\n    };\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newScp),\r\n    };\r\n    scpFunc(options);\r\n\r\n    input.value = \"\";\r\n    inputUrl.value = \"\";\r\n    getScpsTest(newScp.name, newScp.url); // передаємо id\r\n  } else {\r\n    alert(\"Please enter both a name and a URL.\");\r\n  }\r\n}\r\n\r\nfunction getScpsTest(name, url, id) {\r\n  const testItem = document.createElement(\"li\");\r\n  testItem.classList.add(\"gal__item\");\r\n  if (id) testItem.dataset.id = id;\r\n  const deleteButtonTest = document.createElement(\"button\");\r\n  deleteButtonTest.classList.add(\"delete__button\");\r\n  const test = document.createElement(\"a\");\r\n  const isRussian = (text) => /[а-яё]/i.test(text);\r\n\r\n  // if (name.includes(\"SCP\")) {\r\n  //   listSWTest.appendChild(testItem);\r\n  //   deleteButtonTest.textContent = \"ЛИКВИДИРОВАТЬ\";\r\n  // } else if (isRussian(name)) {\r\n  //   deleteButtonTest.textContent = \"Удалить\";\r\n  //   listSFTest.appendChild(testItem);\r\n  // } else {\r\n  testItem.classList.add(\"other__item\");\r\n  listOWTest.appendChild(testItem);\r\n  deleteButtonTest.textContent = \"Удалить\";\r\n  // }\r\n  test.href = url;\r\n  test.textContent = name;\r\n  test.target = \"_blank\";\r\n  test.classList.add(\"gal__link\");\r\n  testItem.appendChild(test);\r\n  testItem.appendChild(deleteButtonTest);\r\n}\r\n\r\nasync function init() {\r\n  if (!ssaps) {\r\n    // Завантажуємо JSON через fetch\r\n    const response = await fetch(\"./nvsdjvdj.json\");\r\n    const skps = await response.json();\r\n    ssaps = skps.skps;\r\n    save(key, ssaps);\r\n  }\r\n\r\n  console.log(ssaps);\r\n\r\n  const storage = new StorageSystem();\r\n  ssaps.forEach((scp) => {\r\n    const id =\r\n      scp.id || Date.now().toString() + Math.random().toString(36).slice(2, 8);\r\n    storage.add(new SCPObject(id, scp.name, scp.url));\r\n    getScps(scp.name, scp.url, id);\r\n  });\r\n  // --- кінець інтеграції ---\r\n\r\n  function getScps(name, url, id) {\r\n    const listItem = document.createElement(\"li\");\r\n    listItem.classList.add(\"gal__item\");\r\n    if (id) listItem.dataset.id = id; // додаємо data-id\r\n    const link = document.createElement(\"a\");\r\n    const deleteButton = document.createElement(\"button\");\r\n    deleteButton.classList.add(\"delete__button\");\r\n    const isRussian = (text) => /[а-яё]/i.test(text);\r\n    const isUkrainian = (text) => /[ґєіїҐЄІЇ]/.test(text);\r\n    // const langdetect = require(\"langdetect\");\r\n\r\n    if (name.includes(\"SCP\")) {\r\n      listSW.appendChild(listItem);\r\n      deleteButton.textContent = \"Annihilate\";\r\n    } else if (isRussian(name)) {\r\n      deleteButton.textContent = \"Удалить\";\r\n      listSF.appendChild(listItem);\r\n    } else {\r\n      listItem.classList.add(\"other__item\");\r\n      listOW.appendChild(listItem);\r\n      deleteButton.textContent = \"Delete\";\r\n    }\r\n    link.href = url;\r\n    link.textContent = name;\r\n    link.target = \"_blank\";\r\n    link.classList.add(\"gal__link\");\r\n    listItem.appendChild(link);\r\n    listItem.appendChild(deleteButton);\r\n\r\n    // --- додано обробник видалення ---\r\n    deleteButton.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      const itemId = listItem.dataset.id;\r\n      // Видалити з storage\r\n      storage.remove(itemId);\r\n      // Видалити з ssaps\r\n      const idx = ssaps.findIndex((obj) => obj.id === itemId);\r\n      if (idx !== -1) {\r\n        ssaps.splice(idx, 1);\r\n        save(key, ssaps);\r\n      }\r\n      // Видалити з DOM\r\n      listItem.remove();\r\n    });\r\n    // --- кінець додавання ---\r\n  }\r\n\r\n  sigmaDiv.addEventListener(\"click\", (e) => {\r\n    if (e.target.classList.contains(\"gallery__item\")) {\r\n      const link = e.target.children[0];\r\n      // window.open(link.href, link.target);\r\n    }\r\n\r\n    const link = item.querySelector(\".gallery__link\");\r\n    // window.open(link.href, link.target);\r\n  });\r\n\r\n  sigmaForm.addEventListener(\"submit\", (event) => {\r\n    event.preventDefault();\r\n    console.log(ssaps);\r\n    setTimeout(() => {\r\n      if (input && inputUrl) {\r\n        addScp(input, inputUrl);\r\n        input.value = \"\";\r\n        inputUrl.value = \"\";\r\n      } else {\r\n        alert(\"Please enter both a name and a URL.\");\r\n      }\r\n    }, 1000);\r\n  });\r\n\r\n  function addScp(input, inputUrl) {\r\n    const nameS = input.value.trim();\r\n    const urlS = inputUrl.value.trim();\r\n    if (nameS && urlS) {\r\n      // Генеруємо простий id\r\n      const id = Date.now().toString() + Math.random().toString(36).slice(2, 8);\r\n      const newScp = {\r\n        name: nameS,\r\n        url: urlS,\r\n        id: id,\r\n      };\r\n\r\n      input.value = \"\";\r\n      inputUrl.value = \"\";\r\n      let array = [];\r\n      ssaps.forEach((scp) => {\r\n        array.push(scp.name);\r\n      });\r\n      if (array.includes(nameS)) {\r\n        alert(\"this scp already exists\");\r\n      } else {\r\n        storage.add(new SCPObject(newScp.id, newScp.name, newScp.url));\r\n        ssaps.push(newScp);\r\n        save(key, ssaps);\r\n        console.log(ssaps);\r\n        getScps(newScp.name, newScp.url, newScp.id); // передаємо id\r\n      }\r\n    } else {\r\n      alert(\"Please enter both a name and a URL.\");\r\n    }\r\n  }\r\n}\r\n\r\ninit(); // Викликаємо асинхронну ініціалізацію\r\n"]}