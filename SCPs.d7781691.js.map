{"version":3,"sources":["modules/storage.js","storageSystem.js","index.js"],"names":["load","exports","key","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","error","save","value","stringify","setItem","SCPObject","_createClass","id","name","description","_classCallCheck","StorageSystem","storage","object","push","index","findIndex","obj","splice","find","_toConsumableArray","_storage","require","_storageSystem","_regenerator","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","sigmaDiv","document","querySelector","sigmaForm","getElementById","input","inputUrl","listSW","listSF","listSU","listOW","ssaps","init","_init","_callee","response","skps","getScps","addScp","_context","_addScp","nameS","trim","urlS","newScp","url","Date","now","toString","Math","random","slice","array","forEach","scp","includes","alert","add","log","_getScps","listItem","createElement","classList","dataset","link","deleteButton","appendChild","textContent","test","href","target","addEventListener","stopPropagation","itemId","remove","idx","fetch","json","contains","children","window","open","item","event","preventDefault","setTimeout"],"mappings":"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","file":"SCPs.d7781691.js","sourceRoot":"..","sourcesContent":["\r\n\r\nconst load = (key) => {\r\n  try {\r\n    const serializedState = localStorage.getItem(key);\r\n\r\n    return serializedState === null ? undefined : JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.error(\"Get state error: \", err);\r\n  }\r\n};\r\n\r\nconst save = (key, value) => {\r\n  try {\r\n    const serializedState = JSON.stringify(value);\r\n\r\n    localStorage.setItem(key, serializedState);\r\n  } catch (err) {\r\n    console.error(\"Set state error: \", err);\r\n  }\r\n};\r\n\r\nexport { save, load };\r\n","export class SCPObject {\r\n  constructor(id, name, description) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.description = description;\r\n  }\r\n}\r\nexport class StorageSystem {\r\n  constructor() {\r\n    this.storage = [];\r\n  }\r\n  add(object) {\r\n    this.storage.push(object);\r\n  }\r\n  remove(id) {\r\n    const index = this.storage.findIndex((obj) => obj.id === id);\r\n    if (index !== -1) {\r\n      this.storage.splice(index, 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  get(id) {\r\n    return this.storage.find((obj) => obj.id === id);\r\n  }\r\n  list() {\r\n    return [...this.storage];\r\n  }\r\n}\r\n","import { save, load } from \"./modules/storage.js\";\r\n // імпортуємо franc для визначення мови\r\n// import skps from \"./nvsdjvdj.json\"; // видалити цей рядок\r\nimport { StorageSystem, SCPObject } from \"./storageSystem.js\"; // змінено з .ts на .js\r\n\r\nconst sigmaDiv = document.querySelector(\".gallery\");\r\nconst sigmaForm = document.getElementById(\"sigma__form\");\r\nconst input = document.getElementById(\"sigma__input\");\r\nconst inputUrl = document.getElementById(\"sigma__input--url\");\r\nconst listSW = document.querySelector(\"#scpW\");\r\nconst listSF = document.querySelector(\"#otherF\");\r\nconst listSU = document.querySelector(\"#otherU\");\r\nconst listOW = document.querySelector(\"#otherW\");\r\n\r\nconst key = \"scps\";\r\nlet ssaps = load(key);\r\n\r\nasync function init() {\r\n  if (!ssaps) {\r\n    // Завантажуємо JSON через fetch\r\n    const response = await fetch(\"./nvsdjvdj.json\");\r\n    const skps = await response.json();\r\n    ssaps = skps.skps;\r\n    save(key, ssaps);\r\n  }\r\n\r\n  console.log(ssaps);\r\n\r\n  const storage = new StorageSystem();\r\n  ssaps.forEach((scp) => {\r\n    const id =\r\n      scp.id || Date.now().toString() + Math.random().toString(36).slice(2, 8);\r\n    storage.add(new SCPObject(id, scp.name, scp.url));\r\n    getScps(scp.name, scp.url, id);\r\n  });\r\n  // --- кінець інтеграції ---\r\n\r\n  function getScps(name, url, id) {\r\n    const listItem = document.createElement(\"li\");\r\n    listItem.classList.add(\"gallery__item\");\r\n    if (id) listItem.dataset.id = id; // додаємо data-id\r\n    const link = document.createElement(\"a\");\r\n    const deleteButton = document.createElement(\"button\");\r\n    deleteButton.classList.add(\"delete__button\");\r\n    const isRussian = (text) => /[а-яё]/i.test(text);\r\n    const isUkrainian = (text) => /[ґєіїҐЄІЇ]/.test(text);\r\n    // const langdetect = require(\"langdetect\");\r\n    \r\n\r\n    if (name.includes(\"SCP\")) {\r\n      listSW.appendChild(listItem);\r\n      deleteButton.textContent = \"Annihilate\";\r\n    } else if (isRussian(name)) {\r\n      deleteButton.textContent = \"Удалить\";\r\n      listSF.appendChild(listItem);\r\n    } else {\r\n      listItem.classList.add(\"other__item\");\r\n      listOW.appendChild(listItem);\r\n      deleteButton.textContent = \"Delete\";\r\n    }\r\n    link.href = url;\r\n    link.textContent = name;\r\n    link.target = \"_blank\";\r\n    link.classList.add(\"gallery__link\");\r\n    listItem.appendChild(link);\r\n    listItem.appendChild(deleteButton);\r\n\r\n    // --- додано обробник видалення ---\r\n    deleteButton.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      const itemId = listItem.dataset.id;\r\n      // Видалити з storage\r\n      storage.remove(itemId);\r\n      // Видалити з ssaps\r\n      const idx = ssaps.findIndex((obj) => obj.id === itemId);\r\n      if (idx !== -1) {\r\n        ssaps.splice(idx, 1);\r\n        save(key, ssaps);\r\n      }\r\n      // Видалити з DOM\r\n      listItem.remove();\r\n    });\r\n    // --- кінець додавання ---\r\n  }\r\n\r\n  sigmaDiv.addEventListener(\"click\", (e) => {\r\n    if (e.target.classList.contains(\"gallery__item\")) {\r\n      const link = e.target.children[0];\r\n      window.open(link.href, link.target);\r\n    }\r\n\r\n    const link = item.querySelector(\".gallery__link\");\r\n    window.open(link.href, link.target);\r\n  });\r\n\r\n  sigmaForm.addEventListener(\"submit\", (event) => {\r\n    event.preventDefault();\r\n    console.log(ssaps);\r\n    setTimeout(() => {\r\n      if (input && inputUrl) {\r\n        addScp(input, inputUrl);\r\n        input.value = \"\";\r\n        inputUrl.value = \"\";\r\n      } else {\r\n        alert(\"Please enter both a name and a URL.\");\r\n      }\r\n    }, 1000);\r\n  });\r\n\r\n  function addScp(input, inputUrl) {\r\n    const nameS = input.value.trim();\r\n    const urlS = inputUrl.value.trim();\r\n    if (nameS && urlS) {\r\n      // Генеруємо простий id\r\n      const id = Date.now().toString() + Math.random().toString(36).slice(2, 8);\r\n      const newScp = {\r\n        name: nameS,\r\n        url: urlS,\r\n        id: id,\r\n      };\r\n\r\n      input.value = \"\";\r\n      inputUrl.value = \"\";\r\n      let array = [];\r\n      ssaps.forEach((scp) => {\r\n        array.push(scp.name);\r\n      })\r\n        if (array.includes(nameS)) {\r\n          alert(\"this scp already exists\");\r\n        } else {\r\n          storage.add(new SCPObject(newScp.id, newScp.name, newScp.url));\r\n          ssaps.push(newScp);\r\n          save(key, ssaps);\r\n          console.log(ssaps);\r\n          getScps(newScp.name, newScp.url, newScp.id); // передаємо id\r\n        }\r\n      \r\n      \r\n    } else {\r\n      alert(\"Please enter both a name and a URL.\");\r\n    }\r\n  }\r\n}\r\n\r\ninit(); // Викликаємо асинхронну ініціалізацію"]}